openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
tags:
  - name: actions
    description: Endpoints to manage GitHub Actions using the REST API.
servers:
  - url: https://api.github.com
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  "/repos/{owner}/{repo}/actions/runs":
    get:
      summary: List workflow runs for a repository
      description: |-
        Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).
        
        Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/list-workflow-runs-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-workflow-runs-for-a-repository
      parameters:
        - "$ref": "#/components/parameters/owner"
        - "$ref": "#/components/parameters/repo"
        - "$ref": "#/components/parameters/actor"
        - "$ref": "#/components/parameters/workflow-run-branch"
        - "$ref": "#/components/parameters/event"
        - "$ref": "#/components/parameters/workflow-run-status"
        - "$ref": "#/components/parameters/per-page"
        - "$ref": "#/components/parameters/page"
        - "$ref": "#/components/parameters/created"
        - "$ref": "#/components/parameters/exclude-pull-requests"
        - "$ref": "#/components/parameters/workflow-run-check-suite-id"
        - "$ref": "#/components/parameters/workflow-run-head-sha"
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - workflow_runs
                properties:
                  total_count:
                    type: integer
                  workflow_runs:
                    type: array
                    items:
                      "$ref": "#/components/schemas/workflow-run"
              examples:
                default:
                  "$ref": "#/components/examples/workflow-run-paginated"
          headers:
            Link:
              "$ref": "#/components/headers/link"
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  "/repos/{owner}/{repo}/actions/runs/{run_id}/logs":
    get:
      summary: Download workflow run logs
      description: |-
        Gets a redirect URL to download an archive of log files for a workflow run. This link expires after 1 minute. Look for
        `Location:` in the response header to find the URL for the download. Anyone with read access to the repository can use
        this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have
        the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/download-workflow-run-logs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#download-workflow-run-logs
      parameters:
        - "$ref": "#/components/parameters/owner"
        - "$ref": "#/components/parameters/repo"
        - "$ref": "#/components/parameters/run-id"
      responses:
        '302':
          description: Response
          headers:
            Location:
              example: https://pipelines.actions.githubusercontent.com/ab1f3cCFPB34Nd6imvFxpGZH5hNlDp2wijMwl2gDoO0bcrrlJj/_apis/pipelines/1/runs/19/signedlogcontent?urlExpires=2020-01-22T22%3A44%3A54.1389777Z&urlSigningMethod=HMACV1&urlSignature=2TUDfIg4fm36OJmfPy6km5QD5DLCOkBVzvhWZM8B%2BUY%3D
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs

components:
  examples:
    workflow-run-paginated:
      value:
        total_count: 1
        workflow_runs:
          - id: 30433642
            name: Build
            node_id: MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==
            check_suite_id: 42
            check_suite_node_id: MDEwOkNoZWNrU3VpdGU0Mg==
            head_branch: master
            head_sha: acb5820ced9479c074f688cc328bf03f341a511d
            run_number: 562
            event: push
            status: queued
            conclusion:
            workflow_id: 159038
            url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642
            html_url: https://github.com/octo-org/octo-repo/actions/runs/30433642
            pull_requests: [ ]
            created_at: '2020-01-22T19:33:08Z'
            updated_at: '2020-01-22T19:33:08Z'
            actor:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            run_attempt: 1
            run_started_at: '2020-01-22T19:33:08Z'
            triggering_actor:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            jobs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs
            logs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs
            check_suite_url: https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374
            artifacts_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts
            cancel_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel
            rerun_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun
            workflow_url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038
            head_commit:
              id: acb5820ced9479c074f688cc328bf03f341a511d
              tree_id: d23f6eedb1e1b9610bbc754ddb5197bfe7271223
              message: Create linter.yaml
              timestamp: '2020-01-22T19:33:05Z'
              author:
                name: Octo Cat
                email: octocat@github.com
              committer:
                name: GitHub
                email: noreply@github.com
            repository:
              id: 1296269
              node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
              name: Hello-World
              full_name: octocat/Hello-World
              owner:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
              private: false
              html_url: https://github.com/octocat/Hello-World
              description: This your first repo!
              fork: false
              url: https://api.github.com/repos/octocat/Hello-World
              archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
              assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
              blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
              branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
              collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
              commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
              compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
              contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
              contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
              deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
              downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
              events_url: https://api.github.com/repos/octocat/Hello-World/events
              forks_url: https://api.github.com/repos/octocat/Hello-World/forks
              git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
              git_url: git:github.com/octocat/Hello-World.git
              issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
              issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
              issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
              keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
              labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
              languages_url: https://api.github.com/repos/octocat/Hello-World/languages
              merges_url: https://api.github.com/repos/octocat/Hello-World/merges
              milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
              notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
              pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
              releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
              ssh_url: git@github.com:octocat/Hello-World.git
              stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
              statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
              subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
              subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
              tags_url: https://api.github.com/repos/octocat/Hello-World/tags
              teams_url: https://api.github.com/repos/octocat/Hello-World/teams
              trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
              hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
            head_repository:
              id: 217723378
              node_id: MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=
              name: octo-repo
              full_name: octo-org/octo-repo
              private: true
              owner:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
              html_url: https://github.com/octo-org/octo-repo
              description:
              fork: false
              url: https://api.github.com/repos/octo-org/octo-repo
              forks_url: https://api.github.com/repos/octo-org/octo-repo/forks
              keys_url: https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}
              collaborators_url: https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}
              teams_url: https://api.github.com/repos/octo-org/octo-repo/teams
              hooks_url: https://api.github.com/repos/octo-org/octo-repo/hooks
              issue_events_url: https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}
              events_url: https://api.github.com/repos/octo-org/octo-repo/events
              assignees_url: https://api.github.com/repos/octo-org/octo-repo/assignees{/user}
              branches_url: https://api.github.com/repos/octo-org/octo-repo/branches{/branch}
              tags_url: https://api.github.com/repos/octo-org/octo-repo/tags
              blobs_url: https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}
              git_tags_url: https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}
              git_refs_url: https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}
              trees_url: https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}
              statuses_url: https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}
              languages_url: https://api.github.com/repos/octo-org/octo-repo/languages
              stargazers_url: https://api.github.com/repos/octo-org/octo-repo/stargazers
              contributors_url: https://api.github.com/repos/octo-org/octo-repo/contributors
              subscribers_url: https://api.github.com/repos/octo-org/octo-repo/subscribers
              subscription_url: https://api.github.com/repos/octo-org/octo-repo/subscription
              commits_url: https://api.github.com/repos/octo-org/octo-repo/commits{/sha}
              git_commits_url: https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}
              comments_url: https://api.github.com/repos/octo-org/octo-repo/comments{/number}
              issue_comment_url: https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}
              contents_url: https://api.github.com/repos/octo-org/octo-repo/contents/{+path}
              compare_url: https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}
              merges_url: https://api.github.com/repos/octo-org/octo-repo/merges
              archive_url: https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}
              downloads_url: https://api.github.com/repos/octo-org/octo-repo/downloads
              issues_url: https://api.github.com/repos/octo-org/octo-repo/issues{/number}
              pulls_url: https://api.github.com/repos/octo-org/octo-repo/pulls{/number}
              milestones_url: https://api.github.com/repos/octo-org/octo-repo/milestones{/number}
              notifications_url: https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}
              labels_url: https://api.github.com/repos/octo-org/octo-repo/labels{/name}
              releases_url: https://api.github.com/repos/octo-org/octo-repo/releases{/id}
              deployments_url: https://api.github.com/repos/octo-org/octo-repo/deployments
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>;
        rel="last"
      schema:
        type: string
  parameters:
    owner:
      name: owner
      description: The account owner of the repository. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      description: The name of the repository. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    actor:
      name: actor
      description: Returns someone's workflow runs. Use the login for the user who
        created the `push` associated with the check suite or workflow run.
      in: query
      required: false
      schema:
        type: string
    workflow-run-branch:
      name: branch
      description: Returns workflow runs associated with a branch. Use the name of
        the branch of the `push`.
      in: query
      required: false
      schema:
        type: string
    event:
      name: event
      description: Returns workflow run triggered by the event you specify. For example,
        `push`, `pull_request` or `issue`. For more information, see "[Events that
        trigger workflows](https://docs.github.com/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows)."
      in: query
      required: false
      schema:
        type: string
    workflow-run-status:
      name: status
      description: Returns workflow runs with the check run `status` or `conclusion`
        that you specify. For example, a conclusion can be `success` or a status can
        be `in_progress`. Only GitHub can set a status of `waiting` or `requested`.
      in: query
      required: false
      schema:
        type: string
        enum:
          - completed
          - action_required
          - cancelled
          - failure
          - neutral
          - skipped
          - stale
          - success
          - timed_out
          - in_progress
          - queued
          - requested
          - waiting
          - pending
    per-page:
      name: per_page
      description: The number of results per page (max 100).
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: Page number of the results to fetch.
      in: query
      schema:
        type: integer
        default: 1
    created:
      name: created
      description: Returns workflow runs created within the given date-time range.
        For more information on the syntax, see "[Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)."
      in: query
      required: false
      schema:
        type: string
        format: date-time
    exclude-pull-requests:
      name: exclude_pull_requests
      description: If `true` pull requests are omitted from the response (empty array).
      in: query
      required: false
      schema:
        type: boolean
        default: false
    workflow-run-check-suite-id:
      name: check_suite_id
      description: Returns workflow runs with the `check_suite_id` that you specify.
      in: query
      schema:
        type: integer
    workflow-run-head-sha:
      name: head_sha
      description: Only returns workflow runs that are associated with the specified
        `head_sha`.
      in: query
      required: false
      schema:
        type: string
    run-id:
      name: run_id
      description: The unique identifier of the workflow run.
      in: path
      required: true
      schema:
        type: integer
        format: int64
  schemas:
    workflow-run:
      title: Workflow Run
      description: An invocation of a workflow
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the workflow run.
          example: 5
        name:
          type: string
          description: The name of the workflow run.
          nullable: true
          example: Build
        node_id:
          type: string
          example: MDEwOkNoZWNrU3VpdGU1
        check_suite_id:
          type: integer
          format: int64
          description: The ID of the associated check suite.
          example: 42
        check_suite_node_id:
          type: string
          description: The node ID of the associated check suite.
          example: MDEwOkNoZWNrU3VpdGU0Mg==
        head_branch:
          type: string
          nullable: true
          example: master
        head_sha:
          description: The SHA of the head commit that points to the version of the
            workflow being run.
          example: '009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d'
          type: string
        path:
          description: The full path of the workflow
          example: octocat/octo-repo/.github/workflows/ci.yml@main
          type: string
        run_number:
          type: integer
          description: The auto incrementing run number for the workflow run.
          example: 106
        run_attempt:
          type: integer
          description: Attempt number of the run, 1 for first attempt and higher if
            the workflow was re-run.
          example: 1
        referenced_workflows:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/referenced-workflow"
        event:
          type: string
          example: push
        status:
          type: string
          nullable: true
          example: completed
        conclusion:
          type: string
          nullable: true
          example: neutral
        workflow_id:
          type: integer
          description: The ID of the parent workflow.
          example: 5
        url:
          type: string
          description: The URL to the workflow run.
          example: https://api.github.com/repos/github/hello-world/actions/runs/5
        html_url:
          type: string
          example: https://github.com/github/hello-world/suites/4
        pull_requests:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/pull-request-minimal"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        actor:
          "$ref": "#/components/schemas/simple-user"
        triggering_actor:
          "$ref": "#/components/schemas/simple-user"
        run_started_at:
          type: string
          format: date-time
          description: The start time of the latest run. Resets on re-run.
        jobs_url:
          description: The URL to the jobs for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/jobs
        logs_url:
          description: The URL to download the logs for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/logs
        check_suite_url:
          description: The URL to the associated check suite.
          type: string
          example: https://api.github.com/repos/github/hello-world/check-suites/12
        artifacts_url:
          description: The URL to the artifacts for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts
        cancel_url:
          description: The URL to cancel the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/cancel
        rerun_url:
          description: The URL to rerun the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/rerun
        previous_attempt_url:
          nullable: true
          description: The URL to the previous attempted run of this workflow, if
            one exists.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/attempts/3
        workflow_url:
          description: The URL to the workflow.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml
        head_commit:
          "$ref": "#/components/schemas/nullable-simple-commit"
        repository:
          "$ref": "#/components/schemas/minimal-repository"
        head_repository:
          "$ref": "#/components/schemas/minimal-repository"
        head_repository_id:
          type: integer
          example: 5
        display_title:
          type: string
          example: Simple Workflow
          description: The event-specific title associated with the run or the run-name
            if set, or the value of `run-name` if it is set in the workflow.
      required:
        - id
        - node_id
        - head_branch
        - run_number
        - display_title
        - event
        - status
        - conclusion
        - head_sha
        - path
        - workflow_id
        - url
        - html_url
        - created_at
        - updated_at
        - head_commit
        - head_repository
        - repository
        - jobs_url
        - logs_url
        - check_suite_url
        - cancel_url
        - rerun_url
        - artifacts_url
        - workflow_url
        - pull_requests
    referenced-workflow:
      title: Referenced workflow
      description: A workflow referenced/reused by the initial caller workflow
      type: object
      properties:
        path:
          type: string
        sha:
          type: string
        ref:
          type: string
      required:
        - path
        - sha
    pull-request-minimal:
      title: Pull Request Minimal
      type: object
      properties:
        id:
          type: integer
        number:
          type: integer
        url:
          type: string
        head:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                url:
                  type: string
                name:
                  type: string
              required:
                - id
                - url
                - name
          required:
            - ref
            - sha
            - repo
        base:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                url:
                  type: string
                name:
                  type: string
              required:
                - id
                - url
                - name
          required:
            - ref
            - sha
            - repo
      required:
        - id
        - number
        - url
        - head
        - base
    simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
    nullable-simple-commit:
      title: Simple Commit
      description: A commit.
      type: object
      properties:
        id:
          type: string
        tree_id:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        author:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
          required:
            - name
            - email
          nullable: true
        committer:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
          required:
            - name
            - email
          nullable: true
      required:
        - id
        - tree_id
        - message
        - timestamp
        - author
        - committer
      nullable: true
    minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          "$ref": "#/components/schemas/simple-user"
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          description: The size of the repository. Size is calculated hourly. When
            a repository is initially created, the size is 0.
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          "$ref": "#/components/schemas/code-of-conduct"
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
        security_and_analysis:
          "$ref": "#/components/schemas/security-and-analysis"
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: |
            # Contributor Covenant Code of Conduct
            
            ## Our Pledge
            
            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.
            
            ## Our Standards
            
            Examples of behavior that contributes to creating a positive environment include:
            
            * Using welcoming and inclusive language
            * Being respectful of differing viewpoints and experiences
            * Gracefully accepting constructive criticism
            * Focusing on what is best for the community
            * Showing empathy towards other community members
            
            Examples of unacceptable behavior by participants include:
            
            * The use of sexualized language or imagery and unwelcome sexual attention or advances
            * Trolling, insulting/derogatory comments, and personal or political attacks
            * Public or private harassment
            * Publishing others' private information, such as a physical or electronic address, without explicit permission
            * Other conduct which could reasonably be considered inappropriate in a professional setting
            
            ## Our Responsibilities
            
            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                              to any instances of unacceptable behavior.
            
            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
            
            ## Scope
            
            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
            
            ## Enforcement
            
            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
            
            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.
            
            ## Attribution
            
            This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]
            
            [homepage]: http://contributor-covenant.org
            [version]: http://contributor-covenant.org/version/1/4/
        html_url:
          type: string
          format: uri
          nullable: true
      required:
        - url
        - html_url
        - key
        - name
    security-and-analysis:
      nullable: true
      type: object
      properties:
        advanced_security:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
        secret_scanning:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
        secret_scanning_push_protection:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled

  # 1) Define the security scheme type (HTTP bearer)
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
# 2) Apply the security globally to all operations
security:
  - bearerAuth: []         # use the same name as above
